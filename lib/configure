#!/bin/sh

topdir='../..'
common='common'

driver=''
target='kernel'
debug=0

# parse the given options.
for option
do
  case "$option" in
  -*=*) optarg=`echo "$option" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
  *) optarg= ;;
  esac

  case "$option" in
  --target=*)
    target="$optarg" ;;
  --driver=*)
    driver="$optarg" ;;
  --debug)
    debug=1 ;;
  esac
done

if [ $target = 'kernel' ] ; then
	# all files are driver-independent 
	cp -f ../kernel/* .
	cp -f $topdir/$common/*.h .
elif [ $target = 'user' ] ; then
	# copy driver-independent files
	cp -f ../user/gdev/* .
	cp -f $topdir/$common/* .
	if [ $(echo ${#driver}) -eq  0 ] ; then
		# detect which driver to be used
		sh ./autogen.sh
	else
		# create Driver.mk
		cat > Driver.mk << EOF
#
# Copyright (C) Shinpei Kato
# All Rights Reserved
#
# This is automatically generated by autogen.sh script.
#

DRIVER_NAME=$driver
EOF
		DRIVER=$(echo $driver | tr "a-z" "A-Z")
		# create gdev_autogen.h
		cat > gdev_autogen.h << EOF
/*
 * Copyright (C) Shinpei Kato
 * All Rights Reserved
 *
 * This is generated by configure script.
 *
 */

#define GDEV_DRIVER_$DRIVER
EOF
	fi
	# include $DRIVER_NAME
	. ./Driver.mk
	# copy driver-dependent files
	cp -f ../user/$DRIVER_NAME/* .
else
	echo "Error: invalid target '$target'"
fi
